--- gcc-linaro-4.5-2011.08.orig/gcc/config/mips/mips.md
+++ gcc-linaro-4.5-2011.08/gcc/config/mips/mips.md
@@ -6893,7 +6899,7 @@
   [(set (match_operand:P 0 "register_operand" "=d")
 	(unspec:P [(const_int 0)] UNSPEC_TLS_GET_TP))
    (clobber (reg:P TLS_GET_TP_REGNUM))]
-  "HAVE_AS_TLS && !TARGET_MIPS16"
+  "HAVE_AS_TLS && !TARGET_RLX && !TARGET_MIPS16"
   "#"
   "&& reload_completed"
   [(set (reg:P TLS_GET_TP_REGNUM)
@@ -6910,13 +6916,45 @@
 (define_insn "*tls_get_tp_<mode>_split"
   [(set (reg:P TLS_GET_TP_REGNUM)
 	(unspec:P [(const_int 0)] UNSPEC_TLS_GET_TP))]
-  "HAVE_AS_TLS && !TARGET_MIPS16"
+  "HAVE_AS_TLS && !TARGET_RLX && !TARGET_MIPS16"
   ".set\tpush\;.set\tmips32r2\t\;rdhwr\t$3,$29\;.set\tpop"
   [(set_attr "type" "unknown")
    ; See tls_get_tp_<mode>
    (set_attr "can_delay" "no")
    (set_attr "mode" "<MODE>")])
 
+;; 
+;; The TLS base pointer on RLX arch is accessed via "mflxc0 $3, $8".  
+;; Emulation of rdhwr on some RLX variants is useless due RADIAX RLX
+;; extension swp.c0 share same opcode (0x7c00003b). So rdhwr insn 
+;; will not generate a trap on such processors.
+(define_insn_and_split "tls_get_tp_rlx_<mode>"
+  [(set (match_operand:P 0 "register_operand" "=d")
+        (unspec:P [(const_int 0)] UNSPEC_TLS_GET_TP))
+   (clobber (reg:P TLS_GET_TP_REGNUM))]
+  "HAVE_AS_TLS && TARGET_RLX && !TARGET_MIPS16"
+  "#"
+  "&& reload_completed"
+  [(set (reg:P TLS_GET_TP_REGNUM) 
+        (unspec:P [(const_int 0)] UNSPEC_TLS_GET_TP))
+   (set (match_dup 0) (reg:P TLS_GET_TP_REGNUM))]
+  ""
+  [(set_attr "type" "unknown")
+
+   ; Since mflxc0 is hardware implemented so try to put it in delay slot.
+   (set_attr "mode" "<MODE>")
+   (set_attr "length" "8")])
+
+(define_insn "*tls_get_tp_rlx_<mode>_split"
+  [(set (reg:P TLS_GET_TP_REGNUM)
+	(unspec:P [(const_int 0)] UNSPEC_TLS_GET_TP))]
+  "HAVE_AS_TLS && TARGET_RLX && !TARGET_MIPS16"
+  "mflxc0\t$3,$8\;"
+  [(set_attr "type" "unknown")
+   ; Since mflxc0 is hardware implemented so try to put it in delay slot.
+   (set_attr "can_delay" "yes")
+   (set_attr "mode" "<MODE>")])
+
 ;; In MIPS16 mode, the TLS base pointer is accessed by a
 ;; libgcc helper function __mips16_rdhwr(), as 'rdhwr' is not
 ;; accessible in MIPS16.
